<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
"http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

<bean id="employee" class="com.emp.Employee">
 <property name="firstname" value="tony" />
 <property name="lastname" value="graig" /> 
 <property name="empid" value="1222" />
</bean>

<bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
	<property name="driverClassName" value="com.pointbase.jdbc.jdbcUniversalDriver" />
	<property name="url" value="jdbc:pointbase:server://localhost:9092/demo" />
	<property name="username" value="PBPUBLIC" />
	<property name="password" value="PBPUBLIC" />
</bean>

<bean id="pp" class="org.hibernate.ejb.HibernatePersistence">

</bean>

<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
	   <property name="persistenceUnitName" value="empperunit" />
	   <property name="persistenceProvider" ref="pp" /> 
</bean>

<bean id="jpaTemplate" class="org.springframework.orm.jpa.JpaTemplate">
<!--  <constructor-arg ref="entityManagerFactory"></constructor-arg> -->
	<property name="entityManagerFactory" ref="entityManagerFactory" />
</bean>

<bean id="idao" class="com.emp.dao.EmployeeDAO">
<!-- as EmployeeDAO extends from JpaDaoSupport, now instead of wiring
     JpaTemplate, we will wire it directly with entityManagerFactory
 -->
	<!--   <property name="jpaTemplate" ref="jpaTemplate" /> -->
	<property name="entityManagerFactory" ref="entityManagerFactory" />
</bean>

<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect">
</bean>

<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
<!--  <bean id="transactionManager" class="com.emp.trans.MyJPATransactionManager"> -->
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <!--  <property name="jpaDialect" ref="jpaDialect"/> -->
        <!--  <property name="dataSource" ref="dataSource"/> -->
</bean>


</beans>